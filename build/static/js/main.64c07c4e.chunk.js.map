{"version":3,"sources":["components/Loading/Loading.jsx","components/SignIn/SignIn.jsx","axios/localStorageService.js","axios/axios.js","components/SignIn/SignInWithFormik.js","axios/queries.js","components/SuccessSignUp/SuccessSignUp.jsx","components/SignUp/SignUp.jsx","components/SignUp/SignUpWithFormik.js","components/Task/Task.jsx","components/Project/Project.jsx","components/ModalWindow/ModalWindow.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js","img/bg.jpg"],"names":["spinnerStyle","display","justifyContent","padding","Loading","style","Spinner","animation","as","invalidDataStyle","color","textAlign","formWrapper","width","backgroundColor","borderRadius","margin","headStyle","textTransform","linkStyle","SignIn","props","values","touched","errors","handleChange","handleBlur","handleSubmit","status","isAuth","history","useHistory","push","Form","noValidate","onSubmit","Group","controlId","Control","name","type","placeholder","value","username","onChange","onBlur","isValid","isInvalid","Feedback","password","Button","variant","common","to","LocalStorageService","setToken","tokenObj","localStorage","setItem","accessToken","refreshToken","getAccessToken","getItem","getRefreshToken","clearToken","removeItem","axios","defaults","baseURL","headers","localStorageService","interceptors","response","use","error","originalRequest","config","_retry","Promise","reject","post","then","res","data","SignInWithFormik","withFormik","mapPropsToValues","validate","setErrors","setStatus","tokens","signIn","setIsAuth","catch","err","displayName","SuccessSignUp","SignUp","setTimeout","passwordRepeat","length","console","log","itemStyle","gridTemplateColumns","checkStyle","nameStyle","borderLeft","borderRight","buttonStyle","Task","id","deleteTask","changeStatus","setEditTaskId","setTaskName","moveTask","findTask","index","onDragEnd","priority","originalIndex","useDrag","item","collect","monitor","isDragging","end","dropResult","droppedId","didDrop","drag","useDrop","accept","canDrop","hover","draggedId","overIndex","drop","opacity","useState","overItem","setOverItem","onChangeStatusHandler","pen","cursor","icon","faEdit","onClick","trash","faTrashAlt","sort","faSort","checked","faCheckSquare","nchecked","faSquare","ListGroup","Item","className","onMouseEnter","onMouseLeave","ref","node","fontSize","CSSTransition","in","timeout","classNames","unmountOnExit","cardStyle","marginTop","border","overflow","borderTop","cardHeaderStyle","background","cardHeaderSpanStyle","marginRight","inputStyle","boxSizing","height","cardBodyStyle","plusStyle","lineHeight","inputWrapperStyle","Project","removeProject","setProjectName","setEditId","setModalProjectShow","tasks","setTasks","taskName","editTaskId","sortTasks","a","b","changePriority","arr","changedTasks","map","useEffect","get","taskId","projectId","calendar","faCalendarAlt","faPen","plus","faPlus","delete","atIndex","task","update","$splice","filter","c","_id","indexOf","Card","Header","Row","Col","lg","paddingRight","Body","FormControl","e","target","trim","i","key","ModalWindow","projectName","addProject","updateProject","editId","rest","setError","Modal","size","aria-labelledby","centered","closeButton","Title","Label","Footer","onHide","fontWeight","noProjectStyle","Main","projects","setProjects","modalProjectShow","DndProvider","backend","Backend","show","resp","bgStyle","zIndex","position","top","left","right","bottom","bg","backgroundSize","headerStyle","paragraphStyle","greetingStyle","App","setUsername","signingIn","Container","path","component","exact","SignUpWithFormik","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.64c07c4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst spinnerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '50px'\r\n}\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div style={spinnerStyle}>\r\n            <Spinner animation='border' as='div' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst invalidDataStyle = {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst formWrapper = {\r\n    width: '600px',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    margin: '100px auto'\r\n}\r\n\r\nconst headStyle = {\r\n    textTransform: 'uppercase',\r\n    color: '#303030',\r\n    margin: '20px 0 40px',\r\n    textAlign: 'center'\r\n}\r\n\r\nconst linkStyle = {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n\r\n}\r\n\r\nconst SignIn = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        status,\r\n        isAuth,\r\n    } = props;\r\n\r\n    const history = useHistory();\r\n\r\n    if (isAuth || status) {\r\n        history.push('/');\r\n    }\r\n\r\n    if (isAuth === null) {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div style={formWrapper}>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n                <h2 style={headStyle}>\r\n                    Sign In\r\n                    </h2>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Control\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.username && !errors.username}\r\n                        isInvalid={!!errors.username && !!touched.username}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.username}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.password && !errors.password}\r\n                        isInvalid={!!errors.password && !!touched.password}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.password}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Sign In\r\n                    </Button>\r\n                {errors.common && <p style={invalidDataStyle}>{errors.common}</p>}\r\n                <Link to='/signup' style={linkStyle}>Or create new account</Link>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;","const LocalStorageService = (function () {\r\n\r\n    function _setToken(tokenObj) {\r\n        localStorage.setItem('accessToken', tokenObj.accessToken);\r\n        localStorage.setItem('refreshToken', tokenObj.refreshToken);\r\n    }\r\n    function _getAccessToken() {\r\n        return localStorage.getItem('accessToken');\r\n    }\r\n    function _getRefreshToken() {\r\n        return localStorage.getItem('refreshToken');\r\n    }\r\n    function _clearToken() {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n    }\r\n    return {\r\n        setToken: _setToken,\r\n        getAccessToken: _getAccessToken,\r\n        getRefreshToken: _getRefreshToken,\r\n        clearToken: _clearToken\r\n    }\r\n\r\n})();\r\nexport default LocalStorageService;","import axios from 'axios';\r\n\r\nimport localStorageService from './localStorageService';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\naxios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\r\n\r\naxios.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    (error) => {\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true;\r\n            return axios.post('/refresh-tokens', { refreshToken: localStorageService.getRefreshToken() })\r\n                .then(res => {\r\n                    if (res.status === 201) {\r\n                        localStorageService.setToken(res.data);\r\n\r\n                        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();\r\n\r\n                        return axios(originalRequest);\r\n                    }\r\n                })\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axios;\r\n","import { withFormik } from 'formik';\r\n\r\nimport SignIn from './SignIn';\r\nimport { signIn } from '../../axios/queries'\r\n\r\nconst SignInWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        username: '',\r\n        password: ''\r\n    }),\r\n\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        if (!values.username) {\r\n            errors.username = 'Required';\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, { setErrors, setStatus, props }) => {\r\n        signIn(values)\r\n            .then((username) => {\r\n                props.setIsAuth(username);\r\n                setStatus(true);\r\n            })\r\n            .catch(err => {\r\n                setErrors({ common: 'Wrong credentials!' });\r\n            });\r\n    },\r\n\r\n    displayName: 'SignInForm',\r\n})\r\n\r\nexport default SignInWithFormik(SignIn);","import axios from './axios';\r\nimport localStorageService from './localStorageService';\r\n\r\nexport const signIn = (values) => {\r\n    return axios.post('/signin', values)\r\n        .then(res => {\r\n            localStorageService.setToken(res.data.tokens);\r\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + res.data.tokens.accessToken;\r\n            return res.data.username;\r\n        });\r\n};","import React from 'react';\r\n\r\nconst style = {\r\n    width: '600px',\r\n    backgroundColor: '#fff',\r\n    padding: '50px',\r\n    borderRadius: '5px',\r\n    margin: '100px auto',\r\n    textAlign: 'center',\r\n    color: '#303030'\r\n}\r\n\r\nconst SuccessSignUp = () => {\r\n    return (\r\n        <div style={style}>\r\n            <h3>Your account succefuly created!</h3>\r\n            <p>You will be automatically redirected to the login page.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuccessSignUp;","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport SuccessSignUp from '../SuccessSignUp/SuccessSignUp';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst invalidDataStyle = {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst formWrapper = {\r\n    width: '600px',\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    margin: '100px auto'\r\n}\r\n\r\nconst headStyle = {\r\n    textTransform: 'uppercase',\r\n    color: '#303030',\r\n    margin: '20px 0 40px',\r\n    textAlign: 'center'\r\n}\r\n\r\nconst linkStyle = {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n\r\n}\r\n\r\nconst SignUp = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        status,\r\n        isAuth\r\n    } = props;\r\n\r\n    if (isAuth) {\r\n        history.push('/');\r\n    }\r\n\r\n    if (status) {\r\n        setTimeout(() => {\r\n            history.push('/signin');\r\n        }, 2000)\r\n\r\n        return <SuccessSignUp />\r\n    }\r\n\r\n    if (isAuth === null) {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div style={formWrapper}>\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n                <h2 style={headStyle}>\r\n                    Sign Up\r\n                    </h2>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Control\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.username && !errors.username}\r\n                        isInvalid={!!errors.username && !!touched.username}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.username}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.password && !errors.password}\r\n                        isInvalid={!!errors.password && !!touched.password}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.password}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Control\r\n                        name=\"passwordRepeat\"\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat password\"\r\n                        value={values.passwordRepeat}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isValid={touched.passwordRepeat && !errors.passwordRepeat}\r\n                        isInvalid={!!errors.passwordRepeat && !!touched.passwordRepeat}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.passwordRepeat}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Sign Up\r\n                    </Button>\r\n                {errors.common && <p style={invalidDataStyle}>{errors.common}</p>}\r\n                <Link to='/signin' style={linkStyle}>Or sign in</Link>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import { withFormik } from 'formik';\r\n\r\nimport SignUp from './SignUp';\r\nimport axios from '../../axios/axios';\r\n\r\nconst SignInWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        username: '',\r\n        password: '',\r\n        passwordRepeat: '',\r\n    }),\r\n\r\n    validate: values => {\r\n        const errors = {};\r\n\r\n        if (!values.username) {\r\n            errors.username = 'Required';\r\n        }\r\n\r\n        if (values.username.length > 20) {\r\n            errors.username = 'username should contain no more than 20 characters'\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        } else if (values.password.length < 6) {\r\n            errors.password = 'password should contain at least 6 characters';\r\n        }\r\n\r\n        if (!values.passwordRepeat) {\r\n            errors.passwordRepeat = 'Required';\r\n        } else if (values.passwordRepeat !== values.password) {\r\n            errors.passwordRepeat = 'Passwords do not match';\r\n        }\r\n\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, { setErrors, setStatus, props }) => {\r\n        axios.post('/signup', {\r\n            username: values.username,\r\n            password: values.password,\r\n            passwordRepeat: values.passwordRepeat\r\n        })\r\n            .then((res) => {\r\n                console.log(1, res)\r\n                setStatus(true);\r\n            })\r\n            .catch(err => {\r\n                console.log(2, err.status);\r\n                setErrors({ common: 'Sign up error!' });\r\n            });\r\n    },\r\n\r\n    displayName: 'SignUpForm',\r\n})\r\n\r\nexport default SignInWithFormik(SignUp);","import React, { useState } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faSquare, faEdit, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useDrop, useDrag } from 'react-dnd'\r\n\r\n\r\nimport './Task.css'\r\n\r\nconst itemStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: '3fr 31fr 8fr',\r\n    padding: '0'\r\n}\r\n\r\nconst checkStyle = {\r\n    color: '#797979',\r\n    textAlign: 'center',\r\n    padding: '15px'\r\n}\r\n\r\nconst nameStyle = {\r\n    padding: '15px',\r\n    borderLeft: '1px solid rgba(0, 0, 0, 0.125)',\r\n    borderRight: '1px solid rgba(0, 0, 0, 0.125)'\r\n}\r\n\r\nconst buttonStyle = {\r\n    color: '#797979',\r\n    padding: '0 15px',\r\n    margin: '15px 0',\r\n    display: 'inline-block'\r\n}\r\n\r\n\r\nconst Task = ({ id, name, status, deleteTask, changeStatus, setEditTaskId, setTaskName, moveTask, index, findTask, onDragEnd, priority }) => {\r\n\r\n    const originalIndex = findTask(id).index\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { type: 'task', id, originalIndex },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n        end: (dropResult, monitor) => {\r\n            const { id: droppedId, originalIndex } = monitor.getItem()\r\n            const didDrop = monitor.didDrop()\r\n            if (!didDrop) {\r\n                moveTask(droppedId, originalIndex)\r\n            }\r\n            if (didDrop) {\r\n                onDragEnd();\r\n            }\r\n        },\r\n    })\r\n    const [, drop] = useDrop({\r\n        accept: 'task',\r\n        canDrop: () => false,\r\n        hover({ id: draggedId }) {\r\n            if (draggedId !== id) {\r\n                const { index: overIndex } = findTask(id)\r\n                moveTask(draggedId, overIndex)\r\n            }\r\n        },\r\n    })\r\n    const opacity = isDragging ? 0 : 1\r\n\r\n    const [overItem, setOverItem] = useState(false);\r\n\r\n    const onRemoveHandler = () => {\r\n        deleteTask(id);\r\n    }\r\n\r\n    const onChangeStatusHandler = () => {\r\n        changeStatus(id, status);\r\n    }\r\n\r\n    const onEditHandler = () => {\r\n        setEditTaskId(id);\r\n        setTaskName(name);\r\n    }\r\n\r\n    const pen = <FontAwesomeIcon style={{ cursor: 'pointer' }} icon={faEdit} onClick={onEditHandler} />;\r\n    const trash = <FontAwesomeIcon style={{ cursor: 'pointer' }} icon={faTrashAlt} onClick={onRemoveHandler} />;\r\n    const sort = <FontAwesomeIcon style={{ cursor: 'pointer' }} icon={faSort} />;\r\n    const checked = <FontAwesomeIcon icon={faCheckSquare} style={{ cursor: 'pointer' }} onClick={onChangeStatusHandler} />\r\n    const nchecked = <FontAwesomeIcon icon={faSquare} style={{ cursor: 'pointer' }} onClick={onChangeStatusHandler} />\r\n\r\n\r\n    return (\r\n        <ListGroup.Item style={{ ...itemStyle, opacity }} className='task-item' onMouseEnter={() => setOverItem(true)} onMouseLeave={() => setOverItem(false)} ref={(node) => drag(drop(node))} >\r\n            <div style={checkStyle}>\r\n                {status ? checked : nchecked}\r\n            </div>\r\n            <div style={nameStyle}>\r\n                {name}\r\n                <span style={{ fontSize: '12px', color: 'gray' }}>priority: {priority}</span>\r\n            </div>\r\n            <CSSTransition in={overItem} timeout={300} classNames=\"buttons\" unmountOnExit>\r\n                <div>\r\n                    <span style={buttonStyle}>{sort}</span>\r\n                    <span style={{ ...buttonStyle, borderLeft: '1px solid #797979', borderRight: '1px solid #797979' }}>{pen}</span>\r\n                    <span style={buttonStyle}>{trash}</span>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        </ListGroup.Item >\r\n    );\r\n}\r\n\r\nexport default Task;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPen, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCalendarAlt, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { useDrop } from 'react-dnd';\r\nimport update from 'immutability-helper';\r\n\r\n\r\nimport Task from '../Task/Task';\r\nimport axios from '../../axios/axios';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst cardStyle = {\r\n    marginTop: '50px',\r\n    borderRadius: '0 0 30px 30px',\r\n    border: '1px solid gray',\r\n    overflow: 'hidden',\r\n    borderRight: 'none',\r\n    borderTop: 'none'\r\n};\r\n\r\nconst cardHeaderStyle = {\r\n    color: '#fff',\r\n    fontSize: '26px',\r\n    background: 'linear-gradient(#4c7fbe, #355fa2)',\r\n    borderRadius: '0'\r\n};\r\n\r\nconst cardHeaderSpanStyle = {\r\n    fontSize: '22px',\r\n    color: '#344b74',\r\n    marginRight: '20px'\r\n};\r\n\r\nconst inputStyle = {\r\n    margin: '15px 0',\r\n    borderRadius: '2px 0 0 2px',\r\n    borderRight: 'none',\r\n    boxSizing: 'border-box',\r\n    height: 'auto'\r\n}\r\n\r\nconst cardBodyStyle = {\r\n    background: 'linear-gradient(#e2e2e2, #c9c9c9)',\r\n    padding: 0\r\n}\r\n\r\nconst plusStyle = {\r\n    color: '#5a9073',\r\n    fontSize: '36px',\r\n    lineHeight: 0,\r\n    margin: '15px auto'\r\n}\r\n\r\nconst inputWrapperStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: '3fr 31fr 8fr',\r\n}\r\n\r\nconst buttonStyle = {\r\n    background: 'linear-gradient(#91c8ac, #548d6c)',\r\n    margin: '15px 15px 15px 0',\r\n    border: '1px solid #ced4da',\r\n    borderLeft: 'none',\r\n    borderRadius: '0 2px 2px 0',\r\n    boxSizing: 'border-box',\r\n    width: '170px'\r\n}\r\n\r\n\r\n\r\nconst Project = ({ id, name, removeProject, setProjectName, setEditId, setModalProjectShow }) => {\r\n\r\n    const [tasks, setTasks] = useState(null);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [editTaskId, setEditTaskId] = useState(null);\r\n\r\n    const sortTasks = (tasks) => {\r\n        tasks.sort((a, b) => a.priority > b.priority ? 1 : -1);\r\n        return tasks;\r\n    }\r\n\r\n    const changePriority = (arr) => {\r\n        const array = arr || tasks;\r\n        const changedTasks = array.map((item, index) => {\r\n            item.priority = index + 1;\r\n            return item;\r\n        })\r\n        axios.post('/update-priority', { tasks: changedTasks })\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        setTasks(changedTasks);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/tasks/' + id)\r\n            .then(res => {\r\n                setTasks(sortTasks(res.data.tasks));\r\n            })\r\n            .catch()\r\n    }, [id])\r\n\r\n    const changeStatus = (taskId, status) => {\r\n        axios.post('/task-status', {\r\n            projectId: id,\r\n            id: taskId,\r\n            status\r\n        })\r\n            .then(res => {\r\n                setTasks(sortTasks(res.data.tasks))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const removeItem = () => {\r\n        removeProject(id);\r\n    }\r\n\r\n    const openEditMode = () => {\r\n        setProjectName(name);\r\n        setEditId(id);\r\n        setModalProjectShow(true);\r\n    }\r\n\r\n    const calendar = <FontAwesomeIcon icon={faCalendarAlt} />;\r\n    const pen = <FontAwesomeIcon style={{ cursor: 'pointer' }} icon={faPen} onClick={openEditMode} />;\r\n    const trash = <FontAwesomeIcon style={{ cursor: 'pointer' }} icon={faTrashAlt} onClick={removeItem} />;\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n\r\n    const taskNameChange = (e) => {\r\n        if (editTaskId && !e.target.value) {\r\n            setEditTaskId(null);\r\n        }\r\n\r\n        if (e.target.value.length < 20) {\r\n            setTaskName(e.target.value);\r\n        }\r\n    }\r\n\r\n    const addNewTask = () => {\r\n        if (taskName.trim().length > 0) {\r\n            axios.post('/tasks', {\r\n                projectId: id,\r\n                name: taskName.trim(),\r\n                priority: tasks.length + 1\r\n            })\r\n                .then(res => {\r\n                    setTaskName('');\r\n                    setTasks(sortTasks(res.data.tasks));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteTask = (taskId) => {\r\n        axios.delete(`/task/${id}/${taskId}`)\r\n            .then(res => {\r\n                changePriority(sortTasks(res.data.tasks));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const editTask = () => {\r\n        if (taskName.trim().length > 0) {\r\n            axios.post('/update-task', {\r\n                id: editTaskId,\r\n                projectId: id,\r\n                name: taskName.trim()\r\n            })\r\n                .then(res => {\r\n                    setTaskName('');\r\n                    setEditTaskId(null);\r\n                    setTasks(sortTasks(res.data.tasks));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    const onDragEnd = () => {\r\n        changePriority();\r\n    }\r\n\r\n    const moveTask = (id, atIndex) => {\r\n        const { task, index } = findTask(id)\r\n        setTasks(\r\n            update(tasks, {\r\n                $splice: [\r\n                    [index, 1],\r\n                    [atIndex, 0, task],\r\n                ],\r\n            }),\r\n        )\r\n    }\r\n\r\n    const findTask = (id) => {\r\n        const task = tasks.filter((c) => `${c._id}` === id)[0]\r\n        return {\r\n            task,\r\n            index: tasks.indexOf(task),\r\n        }\r\n    }\r\n    const [, drop] = useDrop({ accept: 'task' })\r\n\r\n    return (\r\n        <Card style={cardStyle}>\r\n            <Card.Header style={cardHeaderStyle}>\r\n                <Row>\r\n                    <Col lg={10}>\r\n                        <span style={cardHeaderSpanStyle}>{calendar}</span>\r\n                        {name}\r\n                    </Col>\r\n                    <Col lg={2}>\r\n                        <p style={{ textAlign: 'end' }}>\r\n                            <span style={{ ...cardHeaderSpanStyle, borderRight: '1px solid #344b74', paddingRight: '20px' }}>\r\n                                {pen}\r\n                            </span>\r\n                            <span style={cardHeaderSpanStyle}>\r\n                                {trash}\r\n                            </span>\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Header>\r\n            <Card.Body style={cardBodyStyle}>\r\n                <div style={inputWrapperStyle}>\r\n                    <div style={plusStyle}>\r\n                        {plus}\r\n                    </div>\r\n                    <div>\r\n                        <FormControl\r\n                            style={inputStyle}\r\n                            placeholder=\"Enter task name...\"\r\n                            value={taskName}\r\n                            onChange={taskNameChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button style={buttonStyle} onClick={editTaskId ? editTask : addNewTask}>{editTaskId ? 'Edit task' : 'Add task'}</Button>\r\n                    </div>\r\n                </div>\r\n            </Card.Body>\r\n            {!tasks\r\n                ? <Loading />\r\n                : tasks.length === 0\r\n                    ? <p style={{ textAlign: 'center', padding: '50px' }}>There are no tasks, add new one</p>\r\n                    : <div ref={drop}>\r\n                        {tasks.map((item, i) => (\r\n                            <Task\r\n                                key={item._id}\r\n                                id={item._id}\r\n                                name={item.name}\r\n                                status={item.status}\r\n                                deleteTask={deleteTask}\r\n                                changeStatus={changeStatus}\r\n                                setEditTaskId={setEditTaskId}\r\n                                setTaskName={setTaskName}\r\n                                moveTask={moveTask}\r\n                                index={i}\r\n                                findTask={findTask}\r\n                                onDragEnd={onDragEnd}\r\n                                priority={item.priority} />\r\n                        ))}\r\n                    </div>}\r\n\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default Project;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nconst ModalWindow = (props) => {\r\n\r\n    const { projectName, setProjectName, addProject, updateProject, editId, setEditId, ...rest } = props;\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.value.trim().length < 1) {\r\n            setError(true);\r\n        } else {\r\n            setError(false);\r\n        }\r\n        if (e.target.value.length <= 30) {\r\n            setProjectName(e.target.value);\r\n        }\r\n    }\r\n\r\n    const addNewProject = () => {\r\n        if (!error) {\r\n            addProject(projectName);\r\n            setProjectName('');\r\n            rest.onHide();\r\n        }\r\n    }\r\n\r\n    const updateCurrProject = () => {\r\n        if (!error) {\r\n            updateProject();\r\n            setProjectName('');\r\n            rest.onHide();\r\n            setEditId(null)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...rest}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {editId ? 'EditProject' : 'Create new Project'}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group controlId=\"formBasicName\">\r\n                    <Form.Label>Project name</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        placeholder=\"Enter project name\"\r\n                        value={projectName}\r\n                        onChange={handleChange}\r\n                        isInvalid={error} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Invalid project name!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={editId ? updateCurrProject : addNewProject}>{editId ? 'Edit' : 'Add'}</Button>\r\n                <Button onClick={rest.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalWindow;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { DndProvider } from 'react-dnd';\r\nimport Backend from 'react-dnd-html5-backend';\r\n\r\nimport axios from '../../axios/axios';\r\nimport Project from '../Project/Project';\r\nimport Loading from '../Loading/Loading';\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\n\r\nconst plus = <FontAwesomeIcon icon={faPlus} />\r\n\r\nconst buttonStyle = {\r\n    margin: '50px auto',\r\n    textAlign: 'center',\r\n    display: 'block',\r\n    fontSize: '20px',\r\n    fontWeight: 'bold',\r\n    background: 'linear-gradient(#4c7fbe, #355fa2)'\r\n}\r\n\r\nconst plusStyle = {\r\n    color: '#344b74',\r\n}\r\n\r\nconst noProjectStyle = {\r\n    textAlign: 'center',\r\n    color: '#303030',\r\n    fontSize: '20px',\r\n    margin: '50px'\r\n}\r\n\r\nconst Main = ({ isAuth }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [projects, setProjects] = useState(null);\r\n    const [modalProjectShow, setModalProjectShow] = useState(false);\r\n    const [editId, setEditId] = useState(null);\r\n    const [projectName, setProjectName] = useState('');\r\n\r\n    if (!isAuth) {\r\n        history.push('/signin');\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('/projects')\r\n            .then(res => {\r\n                setProjects(res.data.projects);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n\r\n    const openProjectModal = () => {\r\n        setModalProjectShow(true);\r\n    };\r\n\r\n    const closeModalProject = () => {\r\n        setEditId(null);\r\n        setProjectName('');\r\n        setModalProjectShow(false);\r\n\r\n    };\r\n\r\n    const addNewProject = (name) => {\r\n        console.log(name);\r\n        axios.post('/projects', { name })\r\n            .then(resp => {\r\n                setProjects(resp.data.projects);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n\r\n    const removeProject = (id) => {\r\n        axios.delete('/projects/' + id)\r\n            .then(res => {\r\n                setProjects(res.data.projects);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    };\r\n\r\n    const updateProject = () => {\r\n        axios.post('/update-project', {\r\n            id: editId,\r\n            name: projectName\r\n        })\r\n            .then(res => {\r\n                setProjects(res.data.projects);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n\r\n    if (!projects) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <DndProvider backend={Backend}>\r\n                {!projects ? <Loading /> : <div>\r\n                    {projects.length === 0\r\n                        ? <p style={noProjectStyle}>There are no projects, add new one</p>\r\n                        : projects.map(item => <Project key={item._id}\r\n                            id={item._id}\r\n                            name={item.name}\r\n                            setProjectName={setProjectName}\r\n                            removeProject={removeProject}\r\n                            setEditId={setEditId}\r\n                            setModalProjectShow={setModalProjectShow}\r\n                        />)}\r\n                    <Button style={buttonStyle} onClick={openProjectModal}><span style={plusStyle}>{plus}</span> Add TODO List </Button>\r\n                </div>}\r\n                <ModalWindow show={modalProjectShow}\r\n                    onHide={closeModalProject}\r\n                    addProject={addNewProject}\r\n                    editId={editId}\r\n                    setEditId={setEditId}\r\n                    projectName={projectName}\r\n                    setProjectName={setProjectName}\r\n                    updateProject={updateProject}\r\n                />\r\n            </DndProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { useEffect, useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport { Route } from 'react-router-dom';\n\nimport SignInWithFormik from './components/SignIn/SignInWithFormik';\nimport SignUpWithFormik from './components/SignUp/SignUpWithFormik';\nimport Main from './components/Main/Main';\nimport bg from './img/bg.jpg';\nimport axios from './axios/axios'\nimport localStorageService from './axios/localStorageService';\n\nconst bgStyle = {\n  zIndex: '-100',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: `url(${bg}) no-repeat center`,\n  backgroundSize: 'cover',\n  filter: 'blur(30px)'\n};\n\nconst headerStyle = {\n  color: '#303030',\n  textAlign: 'center',\n  marginTop: '50px',\n  textTransform: 'uppercase'\n}\n\nconst paragraphStyle = {\n  fontSize: '20px'\n}\n\nconst greetingStyle = {\n  background: 'linear-gradient(#e2e2e2, #c9c9c9)',\n  padding: '20px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderRadius: '0 0 10px 10px',\n  color: '#303030',\n}\n\nconst buttonStyle = {\n  background: 'linear-gradient(#91c8ac, #548d6c)',\n  border: 'none'\n}\n\nfunction App() {\n\n  const [isAuth, setIsAuth] = useState(null);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    axios.get('/check-token')\n      .then((res) => {\n        setUsername(res.data.username);\n        setIsAuth(true);\n      })\n      .catch((err) => {\n        setIsAuth(false)\n      })\n  }, []);\n\n  const signingIn = (username) => {\n    setUsername(username);\n    setIsAuth(true);\n  }\n\n  const logOutHandler = () => {\n    axios.post('/logout')\n      .then((res) => {\n        axios.defaults.headers.common['Authorization'] = '';\n        localStorageService.clearToken();\n        setUsername('');\n        setIsAuth(false);\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n  };\n\n  return (\n    <div>\n      <Container>\n        {isAuth && <header style={greetingStyle}>\n          <h4>Hello, {username}</h4>\n          <Button style={buttonStyle} onClick={logOutHandler}>Log out</Button>\n        </header>}\n        <div style={headerStyle}>\n          <h1>Simple TODO List</h1>\n          <p style={paragraphStyle}>From RubyGarage</p>\n        </div>\n        <Route path='/signin' component={() => <SignInWithFormik isAuth={isAuth} setIsAuth={signingIn} />} exact />\n        <Route path='/signup' component={() => <SignUpWithFormik isAuth={isAuth} />} exact />\n        <Route path='/' component={() => <Main isAuth={isAuth} />} exact />\n      </Container>\n      <div style={bgStyle}>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.1de37893.jpg\";"],"sourceRoot":""}